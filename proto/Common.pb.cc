// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.proto

#include "Common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CameraProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShaderProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TextureProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectProto;
}  // namespace protobuf_Common_2eproto
namespace Proto {
namespace Common {
class EngineDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EngineData>
      _instance;
} _EngineData_default_instance_;
class CameraProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CameraProto>
      _instance;
} _CameraProto_default_instance_;
class ShaderProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShaderProto>
      _instance;
} _ShaderProto_default_instance_;
class TextureProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextureProto>
      _instance;
} _TextureProto_default_instance_;
class ObjectProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectProto>
      _instance;
} _ObjectProto_default_instance_;
class LightProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LightProto>
      _instance;
} _LightProto_default_instance_;
}  // namespace Common
}  // namespace Proto
namespace protobuf_Common_2eproto {
static void InitDefaultsEngineData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::Common::_EngineData_default_instance_;
    new (ptr) ::Proto::Common::EngineData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::Common::EngineData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EngineData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEngineData}, {
      &protobuf_Common_2eproto::scc_info_CameraProto.base,
      &protobuf_Common_2eproto::scc_info_ObjectProto.base,}};

static void InitDefaultsCameraProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::Common::_CameraProto_default_instance_;
    new (ptr) ::Proto::Common::CameraProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::Common::CameraProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CameraProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCameraProto}, {}};

static void InitDefaultsShaderProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::Common::_ShaderProto_default_instance_;
    new (ptr) ::Proto::Common::ShaderProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::Common::ShaderProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShaderProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShaderProto}, {}};

static void InitDefaultsTextureProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::Common::_TextureProto_default_instance_;
    new (ptr) ::Proto::Common::TextureProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::Common::TextureProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TextureProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTextureProto}, {}};

static void InitDefaultsObjectProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::Common::_ObjectProto_default_instance_;
    new (ptr) ::Proto::Common::ObjectProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::Common::ObjectProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectProto}, {
      &protobuf_Common_2eproto::scc_info_ShaderProto.base,
      &protobuf_Common_2eproto::scc_info_TextureProto.base,}};

static void InitDefaultsLightProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::Common::_LightProto_default_instance_;
    new (ptr) ::Proto::Common::LightProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::Common::LightProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LightProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLightProto}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EngineData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CameraProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShaderProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TextureProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LightProto.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::EngineData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::EngineData, camera_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::EngineData, object_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::CameraProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::ShaderProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::ShaderProto, x_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::TextureProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::TextureProto, x_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::ObjectProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::ObjectProto, shader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::ObjectProto, texture_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::LightProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::LightProto, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::LightProto, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Proto::Common::LightProto, z_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Proto::Common::EngineData)},
  { 7, -1, sizeof(::Proto::Common::CameraProto)},
  { 12, -1, sizeof(::Proto::Common::ShaderProto)},
  { 18, -1, sizeof(::Proto::Common::TextureProto)},
  { 24, -1, sizeof(::Proto::Common::ObjectProto)},
  { 31, -1, sizeof(::Proto::Common::LightProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::Common::_EngineData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::Common::_CameraProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::Common::_ShaderProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::Common::_TextureProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::Common::_ObjectProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::Common::_LightProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Common.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Common.proto\022\014Proto.Common\"b\n\nEngineDa"
      "ta\022)\n\006camera\030\001 \001(\0132\031.Proto.Common.Camera"
      "Proto\022)\n\006object\030\002 \003(\0132\031.Proto.Common.Obj"
      "ectProto\"\r\n\013CameraProto\"\030\n\013ShaderProto\022\t"
      "\n\001x\030\001 \001(\r\"\031\n\014TextureProto\022\t\n\001x\030\001 \001(\r\"e\n\013"
      "ObjectProto\022)\n\006shader\030\001 \001(\0132\031.Proto.Comm"
      "on.ShaderProto\022+\n\007texture\030\002 \003(\0132\032.Proto."
      "Common.TextureProto\"-\n\nLightProto\022\t\n\001x\030\001"
      " \001(\r\022\t\n\001y\030\002 \001(\r\022\t\n\001z\030\003 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 354);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Common_2eproto
namespace Proto {
namespace Common {

// ===================================================================

void EngineData::InitAsDefaultInstance() {
  ::Proto::Common::_EngineData_default_instance_._instance.get_mutable()->camera_ = const_cast< ::Proto::Common::CameraProto*>(
      ::Proto::Common::CameraProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EngineData::kCameraFieldNumber;
const int EngineData::kObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EngineData::EngineData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Common_2eproto::scc_info_EngineData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Common.EngineData)
}
EngineData::EngineData(const EngineData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      object_(from.object_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_camera()) {
    camera_ = new ::Proto::Common::CameraProto(*from.camera_);
  } else {
    camera_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Proto.Common.EngineData)
}

void EngineData::SharedCtor() {
  camera_ = NULL;
}

EngineData::~EngineData() {
  // @@protoc_insertion_point(destructor:Proto.Common.EngineData)
  SharedDtor();
}

void EngineData::SharedDtor() {
  if (this != internal_default_instance()) delete camera_;
}

void EngineData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EngineData::descriptor() {
  ::protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EngineData& EngineData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Common_2eproto::scc_info_EngineData.base);
  return *internal_default_instance();
}


void EngineData::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Common.EngineData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_.Clear();
  if (GetArenaNoVirtual() == NULL && camera_ != NULL) {
    delete camera_;
  }
  camera_ = NULL;
  _internal_metadata_.Clear();
}

bool EngineData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Common.EngineData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Proto.Common.CameraProto camera = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_camera()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Proto.Common.ObjectProto object = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Common.EngineData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Common.EngineData)
  return false;
#undef DO_
}

void EngineData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Common.EngineData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Proto.Common.CameraProto camera = 1;
  if (this->has_camera()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_camera(), output);
  }

  // repeated .Proto.Common.ObjectProto object = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->object(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.Common.EngineData)
}

::google::protobuf::uint8* EngineData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.Common.EngineData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Proto.Common.CameraProto camera = 1;
  if (this->has_camera()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_camera(), deterministic, target);
  }

  // repeated .Proto.Common.ObjectProto object = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->object(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.Common.EngineData)
  return target;
}

size_t EngineData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Common.EngineData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Proto.Common.ObjectProto object = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->object_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->object(static_cast<int>(i)));
    }
  }

  // .Proto.Common.CameraProto camera = 1;
  if (this->has_camera()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *camera_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EngineData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.Common.EngineData)
  GOOGLE_DCHECK_NE(&from, this);
  const EngineData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EngineData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.Common.EngineData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.Common.EngineData)
    MergeFrom(*source);
  }
}

void EngineData::MergeFrom(const EngineData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Common.EngineData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  object_.MergeFrom(from.object_);
  if (from.has_camera()) {
    mutable_camera()->::Proto::Common::CameraProto::MergeFrom(from.camera());
  }
}

void EngineData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.Common.EngineData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EngineData::CopyFrom(const EngineData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Common.EngineData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EngineData::IsInitialized() const {
  return true;
}

void EngineData::Swap(EngineData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EngineData::InternalSwap(EngineData* other) {
  using std::swap;
  CastToBase(&object_)->InternalSwap(CastToBase(&other->object_));
  swap(camera_, other->camera_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EngineData::GetMetadata() const {
  protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CameraProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CameraProto::CameraProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Common_2eproto::scc_info_CameraProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Common.CameraProto)
}
CameraProto::CameraProto(const CameraProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Proto.Common.CameraProto)
}

void CameraProto::SharedCtor() {
}

CameraProto::~CameraProto() {
  // @@protoc_insertion_point(destructor:Proto.Common.CameraProto)
  SharedDtor();
}

void CameraProto::SharedDtor() {
}

void CameraProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CameraProto::descriptor() {
  ::protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CameraProto& CameraProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Common_2eproto::scc_info_CameraProto.base);
  return *internal_default_instance();
}


void CameraProto::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Common.CameraProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CameraProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Common.CameraProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Common.CameraProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Common.CameraProto)
  return false;
#undef DO_
}

void CameraProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Common.CameraProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.Common.CameraProto)
}

::google::protobuf::uint8* CameraProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.Common.CameraProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.Common.CameraProto)
  return target;
}

size_t CameraProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Common.CameraProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CameraProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.Common.CameraProto)
  GOOGLE_DCHECK_NE(&from, this);
  const CameraProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CameraProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.Common.CameraProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.Common.CameraProto)
    MergeFrom(*source);
  }
}

void CameraProto::MergeFrom(const CameraProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Common.CameraProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CameraProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.Common.CameraProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraProto::CopyFrom(const CameraProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Common.CameraProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraProto::IsInitialized() const {
  return true;
}

void CameraProto::Swap(CameraProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CameraProto::InternalSwap(CameraProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CameraProto::GetMetadata() const {
  protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShaderProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShaderProto::kXFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShaderProto::ShaderProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Common_2eproto::scc_info_ShaderProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Common.ShaderProto)
}
ShaderProto::ShaderProto(const ShaderProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_ = from.x_;
  // @@protoc_insertion_point(copy_constructor:Proto.Common.ShaderProto)
}

void ShaderProto::SharedCtor() {
  x_ = 0u;
}

ShaderProto::~ShaderProto() {
  // @@protoc_insertion_point(destructor:Proto.Common.ShaderProto)
  SharedDtor();
}

void ShaderProto::SharedDtor() {
}

void ShaderProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShaderProto::descriptor() {
  ::protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShaderProto& ShaderProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Common_2eproto::scc_info_ShaderProto.base);
  return *internal_default_instance();
}


void ShaderProto::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Common.ShaderProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_ = 0u;
  _internal_metadata_.Clear();
}

bool ShaderProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Common.ShaderProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Common.ShaderProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Common.ShaderProto)
  return false;
#undef DO_
}

void ShaderProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Common.ShaderProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.Common.ShaderProto)
}

::google::protobuf::uint8* ShaderProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.Common.ShaderProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.Common.ShaderProto)
  return target;
}

size_t ShaderProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Common.ShaderProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShaderProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.Common.ShaderProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ShaderProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShaderProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.Common.ShaderProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.Common.ShaderProto)
    MergeFrom(*source);
  }
}

void ShaderProto::MergeFrom(const ShaderProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Common.ShaderProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
}

void ShaderProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.Common.ShaderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShaderProto::CopyFrom(const ShaderProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Common.ShaderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShaderProto::IsInitialized() const {
  return true;
}

void ShaderProto::Swap(ShaderProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShaderProto::InternalSwap(ShaderProto* other) {
  using std::swap;
  swap(x_, other->x_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShaderProto::GetMetadata() const {
  protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextureProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextureProto::kXFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextureProto::TextureProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Common_2eproto::scc_info_TextureProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Common.TextureProto)
}
TextureProto::TextureProto(const TextureProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_ = from.x_;
  // @@protoc_insertion_point(copy_constructor:Proto.Common.TextureProto)
}

void TextureProto::SharedCtor() {
  x_ = 0u;
}

TextureProto::~TextureProto() {
  // @@protoc_insertion_point(destructor:Proto.Common.TextureProto)
  SharedDtor();
}

void TextureProto::SharedDtor() {
}

void TextureProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TextureProto::descriptor() {
  ::protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextureProto& TextureProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Common_2eproto::scc_info_TextureProto.base);
  return *internal_default_instance();
}


void TextureProto::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Common.TextureProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_ = 0u;
  _internal_metadata_.Clear();
}

bool TextureProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Common.TextureProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Common.TextureProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Common.TextureProto)
  return false;
#undef DO_
}

void TextureProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Common.TextureProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.Common.TextureProto)
}

::google::protobuf::uint8* TextureProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.Common.TextureProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.Common.TextureProto)
  return target;
}

size_t TextureProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Common.TextureProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextureProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.Common.TextureProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TextureProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextureProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.Common.TextureProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.Common.TextureProto)
    MergeFrom(*source);
  }
}

void TextureProto::MergeFrom(const TextureProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Common.TextureProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
}

void TextureProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.Common.TextureProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextureProto::CopyFrom(const TextureProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Common.TextureProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextureProto::IsInitialized() const {
  return true;
}

void TextureProto::Swap(TextureProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextureProto::InternalSwap(TextureProto* other) {
  using std::swap;
  swap(x_, other->x_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TextureProto::GetMetadata() const {
  protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectProto::InitAsDefaultInstance() {
  ::Proto::Common::_ObjectProto_default_instance_._instance.get_mutable()->shader_ = const_cast< ::Proto::Common::ShaderProto*>(
      ::Proto::Common::ShaderProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectProto::kShaderFieldNumber;
const int ObjectProto::kTextureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectProto::ObjectProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Common_2eproto::scc_info_ObjectProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Common.ObjectProto)
}
ObjectProto::ObjectProto(const ObjectProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      texture_(from.texture_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shader()) {
    shader_ = new ::Proto::Common::ShaderProto(*from.shader_);
  } else {
    shader_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Proto.Common.ObjectProto)
}

void ObjectProto::SharedCtor() {
  shader_ = NULL;
}

ObjectProto::~ObjectProto() {
  // @@protoc_insertion_point(destructor:Proto.Common.ObjectProto)
  SharedDtor();
}

void ObjectProto::SharedDtor() {
  if (this != internal_default_instance()) delete shader_;
}

void ObjectProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectProto::descriptor() {
  ::protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectProto& ObjectProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Common_2eproto::scc_info_ObjectProto.base);
  return *internal_default_instance();
}


void ObjectProto::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Common.ObjectProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  texture_.Clear();
  if (GetArenaNoVirtual() == NULL && shader_ != NULL) {
    delete shader_;
  }
  shader_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Common.ObjectProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Proto.Common.ShaderProto shader = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Proto.Common.TextureProto texture = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_texture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Common.ObjectProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Common.ObjectProto)
  return false;
#undef DO_
}

void ObjectProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Common.ObjectProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Proto.Common.ShaderProto shader = 1;
  if (this->has_shader()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shader(), output);
  }

  // repeated .Proto.Common.TextureProto texture = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->texture_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->texture(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.Common.ObjectProto)
}

::google::protobuf::uint8* ObjectProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.Common.ObjectProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Proto.Common.ShaderProto shader = 1;
  if (this->has_shader()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shader(), deterministic, target);
  }

  // repeated .Proto.Common.TextureProto texture = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->texture_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->texture(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.Common.ObjectProto)
  return target;
}

size_t ObjectProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Common.ObjectProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Proto.Common.TextureProto texture = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->texture_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->texture(static_cast<int>(i)));
    }
  }

  // .Proto.Common.ShaderProto shader = 1;
  if (this->has_shader()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shader_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.Common.ObjectProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.Common.ObjectProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.Common.ObjectProto)
    MergeFrom(*source);
  }
}

void ObjectProto::MergeFrom(const ObjectProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Common.ObjectProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  texture_.MergeFrom(from.texture_);
  if (from.has_shader()) {
    mutable_shader()->::Proto::Common::ShaderProto::MergeFrom(from.shader());
  }
}

void ObjectProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.Common.ObjectProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectProto::CopyFrom(const ObjectProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Common.ObjectProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectProto::IsInitialized() const {
  return true;
}

void ObjectProto::Swap(ObjectProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectProto::InternalSwap(ObjectProto* other) {
  using std::swap;
  CastToBase(&texture_)->InternalSwap(CastToBase(&other->texture_));
  swap(shader_, other->shader_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectProto::GetMetadata() const {
  protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LightProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LightProto::kXFieldNumber;
const int LightProto::kYFieldNumber;
const int LightProto::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LightProto::LightProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Common_2eproto::scc_info_LightProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Common.LightProto)
}
LightProto::LightProto(const LightProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:Proto.Common.LightProto)
}

void LightProto::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

LightProto::~LightProto() {
  // @@protoc_insertion_point(destructor:Proto.Common.LightProto)
  SharedDtor();
}

void LightProto::SharedDtor() {
}

void LightProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LightProto::descriptor() {
  ::protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LightProto& LightProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Common_2eproto::scc_info_LightProto.base);
  return *internal_default_instance();
}


void LightProto::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Common.LightProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool LightProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Common.LightProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Common.LightProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Common.LightProto)
  return false;
#undef DO_
}

void LightProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Common.LightProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y(), output);
  }

  // uint32 z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.Common.LightProto)
}

::google::protobuf::uint8* LightProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.Common.LightProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x(), target);
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->y(), target);
  }

  // uint32 z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.Common.LightProto)
  return target;
}

size_t LightProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Common.LightProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());
  }

  // uint32 z = 3;
  if (this->z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->z());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LightProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.Common.LightProto)
  GOOGLE_DCHECK_NE(&from, this);
  const LightProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LightProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.Common.LightProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.Common.LightProto)
    MergeFrom(*source);
  }
}

void LightProto::MergeFrom(const LightProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Common.LightProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void LightProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.Common.LightProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LightProto::CopyFrom(const LightProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Common.LightProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightProto::IsInitialized() const {
  return true;
}

void LightProto::Swap(LightProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LightProto::InternalSwap(LightProto* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LightProto::GetMetadata() const {
  protobuf_Common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Common
}  // namespace Proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Proto::Common::EngineData* Arena::CreateMaybeMessage< ::Proto::Common::EngineData >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::Common::EngineData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Proto::Common::CameraProto* Arena::CreateMaybeMessage< ::Proto::Common::CameraProto >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::Common::CameraProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Proto::Common::ShaderProto* Arena::CreateMaybeMessage< ::Proto::Common::ShaderProto >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::Common::ShaderProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Proto::Common::TextureProto* Arena::CreateMaybeMessage< ::Proto::Common::TextureProto >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::Common::TextureProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Proto::Common::ObjectProto* Arena::CreateMaybeMessage< ::Proto::Common::ObjectProto >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::Common::ObjectProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Proto::Common::LightProto* Arena::CreateMaybeMessage< ::Proto::Common::LightProto >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::Common::LightProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
